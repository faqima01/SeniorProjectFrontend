{"version":3,"sources":["components/App.js","components/Navbar.jsx","components/Landing.jsx","components/About.jsx","components/Categories.jsx","components/SignIn.jsx","components/CreateAccount.jsx","components/Profile.jsx","components/RecoverPassword.jsx","components/categories/Textbooks.jsx","components/categories/Misc.jsx","components/categories/LostAndFound.jsx","components/Bcrypt_Backdoor.jsx","serviceWorker.js","components/Slideshow.jsx","components/Home.jsx","index.js","components/images/campushare_logo.png","components/images/bell.png","components/images/AboutUs.png","components/ResetPassword.jsx","components/categories/Listing.jsx"],"names":["getCookie","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","global","customAuth","isAuthenticated","email","authenticate","staySignedIn","this","d","Date","sessionLength","console","log","setTime","getTime","toUTCString","signout","window","location","href","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","App","className","path","exact","Categories","About","sectionTitle","LostAndFound","Listing","Misc","SignIn","CreateAccount","RecoverPassword","ResetPassword","Profile","Backdoor","NavBar","expand","sticky","xs","sm","md","lg","xl","src","require","alt","Toggle","aria-controls","Collapse","id","Item","Link","Text","variant","size","onClick","disabled","backendURL","Landing","componentDidMount","fetchNotifications","a","fetch","method","headers","body","JSON","stringify","query","then","response","json","data","setState","requests","offers","sendMessage","notificationId","status","catch","error","dismissNotification","showModal","bind","map","request","show","onClose","key","notification_id","Header","offerer_email","Body","offer","requester_email","React","bcrypt","verifyLogin","event","preventDefault","refs","value","password","checked","selectAPI","process","result","hash","compare","err","res","setTimeout","errMsg","onSubmit","Group","as","Row","controlId","Label","column","Control","type","ref","placeholder","required","Append","Feedback","span","offset","Check","label","verifyEmail","validEmail","savePassword","insertAPI","accountCreated","useState","setShow","userdata","saveChanges","user_email","majors","majors_options","push","fetchUserData","config","jwt","confirmAccountExists","norsekey","errorMessage","object","accountExists","hashedPassword","serverErrorMsg","message","sendEmail","payload","userEmail","secret","text","token","encode","templateParams","recipient","password_reset_link","thisURL","password_recovery","emailjs","send","emailSent","userErrorMsg","handleChange","target","toLowerCase","onChange","readOnly","defaultValue","googleAPI","Textbooks","fetchBooks","url","items","alert","fetchVolumeInfo","title","textbook_title","API_KEY","bookOptions","handleModalShow","handleModalClose","handleSubmit","gbID","GoogleBookID","gbTitle","gbVolInfo","volumeInfo","gbBookTitle","gbBookAuthor","authors","gbBookImage","imageLinks","smallThumbnail","sendRequest","owner","bookID","handleConfirmDeleteShow","showConfirmDelete","handleConfirmDeleteClose","deleteItem","item","placement","popover","clickable","book_id","book_image","book_title","style","display","book_author","course","loanPeriod","animation","onHide","closeButton","Title","bookOption","publisher","publishedDate","bucketName","dirName","region","accessKeyId","secretAccessKey","item_id","deleteAPI","fetchItems","handleImageUpload","files","file","fileURL","URL","createObjectURL","item_name","item_desc","item_img","loan_start","loan_end","uploadToS3","saveToDB","fileLocation","S3FileUpload","uploadFile","loan_period","centered","categoryName","Prepend","rows","accept","datetime_found","location_found","categoryDesc","form","Boolean","hostname","match","unregister","navigator","serviceWorker","ready","registration","ControlledCarousel","index","setIndex","direction","setDirection","Carousel","activeIndex","onSelect","selectedIndex","e","Image","fluid","Home","exampleAPICallData","Button","updateAPI","ReactDOM","getElementById","module","exports","getSecret","APIkey","resetPasswordSecret","validate","slice","decode","validated","showError","newPassword","passwordSaved","url_parts","JWT","role","noValidate","tableName","requestItem","source_table","cards"],"mappings":"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","file":"static/js/main.44f21b88.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\n// Component Imports\r\nimport NavBar from \"./Navbar\";\r\n\r\n// Public Pages\r\nimport Landing from \"./Landing\";\r\nimport About from \"./About\";\r\nimport Categories from \"./Categories\";\r\nimport SignIn from \"./SignIn\";\r\nimport CreateAccount from \"./CreateAccount\";\r\n\r\n// Private Pages\r\nimport Home from \"./Home\";\r\nimport Profile from \"./Profile\";\r\nimport RecoverPassword from \"./RecoverPassword\";\r\n\r\n// Category Pages\r\nimport Textbooks from \"./categories/Textbooks\";\r\nimport Misc from \"./categories/Misc\";\r\nimport LostAndFound from \"./categories/LostAndFound\";\r\nimport Listing from \"./categories/Listing\";\r\nimport ResetPassword from './ResetPassword';\r\n\r\nimport Backdoor from \"./Bcrypt_Backdoor\";\r\n// console.log(process.env);\r\n\r\nconst getCookie = (cname) => {\r\n  let name = cname + \"=\";\r\n  let decodedCookie = decodeURIComponent(document.cookie);\r\n  let ca = decodedCookie.split(';');\r\n  for(let i = 0; i <ca.length; i++) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) === ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) === 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\n// TODO: Check if a user is logged in with JWTs\r\nglobal.customAuth = {\r\n  isAuthenticated: (getCookie(\"email\") !== \"\"),\r\n  email: getCookie(\"email\"),\r\n  authenticate(email, staySignedIn) {\r\n    this.email = email;\r\n    // Set expires to 24 hrs by default; add 14 days based on user selection later\r\n    let d = new Date();\r\n    let sessionLength = 24*60*60*1000;\r\n    if (staySignedIn) {\r\n      sessionLength *= 14;\r\n    }\r\n    console.log(sessionLength);\r\n    d.setTime(d.getTime() + sessionLength);\r\n    document.cookie = `email=${this.email}; expires=${d.toUTCString()}; path=/;`\r\n  },\r\n  signout() {\r\n    // Set to Past Date\r\n    let d = new Date();\r\n    d.setTime(d.getTime() - (24*60*60*1000));\r\n    document.cookie = `email=\"\"; expires=${d.toUTCString()}; path=/;`\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    global.customAuth.isAuthenticated\r\n      ? <Component {...props} />\r\n      : <Redirect to={{\r\n          pathname: '/signin',\r\n          state: { from: props.location }\r\n       }} />\r\n  )} />\r\n)\r\n\r\n// App: main body of the page\r\nconst App = () => {\r\n\r\n  // Returns the App Instance\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {/* Nav Bar -- on all pages */}\r\n        <NavBar />\r\n        <div className=\"element\">\r\n          {/* Renders the proper content based on route */}\r\n          <Switch>\r\n            {/* Routes to Landing or Home based on if a user is logged in */}\r\n            <Route path=\"/\" exact render={(props) => (\r\n              // The order of Landing and Home is opposite to what I would expect\r\n              // ...just rolling with it for now.\r\n              global.customAuth.isAuthenticated\r\n              ? <Landing />\r\n              : <Home {...props} />\r\n            )} />\r\n            <Route path=\"/categories\" component={Categories}/>\r\n            {/* Public Pages */}\r\n            <Route path=\"/about\" component={About}/>\r\n            <Route path=\"/textbooks\">\r\n              <Textbooks sectionTitle=\"Textbooks\" className=\"listing\" />\r\n            </Route>\r\n            <Route path=\"/lostandfound\" component={LostAndFound} />\r\n            <Route path=\"/listing\" component={Listing} />\r\n            <Route path=\"/misc\" component={Misc} />\r\n            <Route path=\"/signin\" component={SignIn} />\r\n            <Route path=\"/createaccount\" component={CreateAccount} />\r\n            {/* Keep a logged-in user from accessing? */}\r\n            <Route path=\"/recoverpassword\" component={RecoverPassword} />\r\n            {/* Reset Password -- not logged in, but need a JSON Web Token to access */}\r\n            <Route path=\"/resetpassword/:email/:token\" component={ResetPassword} />\r\n            {/* Private Pages */}\r\n            <PrivateRoute path=\"/profile\" component={Profile} />\r\n            <Route path=\"/backdoor\" component={Backdoor} />\r\n          </Switch>\r\n        </div>\r\n        </Router>\r\n        <p className=\"footerMessage\">Candid Cheetah Co. &copy;2019-2020</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// src/components/NavBar.js\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { Button, Col, Nav, Navbar, Row } from \"react-bootstrap\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nconst NavBar = () => {\r\n\r\n    return (\r\n        <Navbar className=\"App-navBar\" expand=\"lg\" sticky=\"top\">\r\n            <Row>\r\n                <Col xs={4} sm={4} md={2} lg={2} xl={2}>\r\n                    {/* For some reason, adding a link to the home page messes up the placement */}\r\n                    <a href=\"/\">\r\n                        <img src={require(\"./images/campushare_logo.png\")} className=\"logo\" alt=\"CampusShare Logo\"/>\r\n                    </a>\r\n                </Col>\r\n                <Col xs={0} sm={0} md={2} lg={2} xl={2}>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"floatRight\" />\r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={8} xl={8}>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        { global.customAuth.isAuthenticated\r\n                            ? (\r\n                                <Fragment>\r\n                                    <Nav className=\"mr-auto\">\r\n                                        <Nav.Item><Nav.Link href=\"/\">Home</Nav.Link></Nav.Item>\r\n                                        <Nav.Item><Nav.Link href=\"/categories\">Categories</Nav.Link></Nav.Item>\r\n                                    </Nav>\r\n                                    <Nav className=\"justify-content-end\">\r\n                                        <Nav.Item>\r\n                                            <Navbar.Text>\r\n                                                Signed in as: <a href=\"/profile\">{global.customAuth.email}</a>\r\n                                            </Navbar.Text>\r\n                                        </Nav.Item>\r\n                                        <Nav.Item>\r\n                                            <Button variant=\"outline-secondary\" size=\"sm\" className=\"btn-signOut\" onClick={global.customAuth.signout}>Sign Out</Button>\r\n                                        </Nav.Item>\r\n                                    </Nav>\r\n                                </Fragment>\r\n                            )\r\n                            : (\r\n                                <Fragment>\r\n                                    <Nav className=\"mr-auto\">\r\n                                        <Nav.Item><Nav.Link href=\"/\">Home</Nav.Link></Nav.Item>\r\n                                        <Nav.Item><Nav.Link href=\"/about\">About</Nav.Link></Nav.Item>\r\n                                        <Nav.Item><Nav.Link disabled >How does it work</Nav.Link></Nav.Item>\r\n                                        <Nav.Item><Nav.Link href=\"/categories\">Categories</Nav.Link></Nav.Item>\r\n                                    </Nav>\r\n                                    <Nav className=\"justify-content-end\">\r\n                                        <a href=\"/signin\"><Button variant=\"success\" size=\"sm\" className=\"btn-signIn\">Sign In</Button></a>\r\n                                    </Nav>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                    </Navbar.Collapse>\r\n                </Col>\r\n            </Row>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React, { Fragment } from 'react';\r\nimport { Button, Col, Toast } from 'react-bootstrap';\r\nimport \"./Landing.css\";\r\n// import UserDetailsModal from './components/UserDetailsModal';\r\n\r\nconst backendURL = \"http://campus-share-backend.us-east-2.elasticbeanstalk.com\";\r\n\r\nclass Landing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { showModal: false,\r\n                    //    userData: this.props.userData,\r\n                       requests: [],\r\n                       offers: []\r\n                     }\r\n        this.fetchNotifications = this.fetchNotifications.bind(this);\r\n        this.dismissNotification = this.dismissNotification.bind(this);\r\n    }\r\n\r\n    // Initial Notification Fetch\r\n    componentDidMount = () => {this.fetchNotifications()};\r\n\r\n    fetchNotifications = async () => {\r\n        // Populate Request Notifications\r\n        await fetch(`${backendURL}/query`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                query: `SELECT * from Notifications WHERE requester_email=\"${global.customAuth.email}\" ORDER BY notification_id DESC`,\r\n            }), })\r\n            .then(response => response.json())\r\n            .then(data => this.setState({requests: data.data}));\r\n\r\n        // Populate Offer Notifications\r\n        await fetch(`${backendURL}/query`, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                        query: `SELECT * from Notifications WHERE offerer_email=\"${global.customAuth.email}\" ORDER BY notification_id DESC`,\r\n                    }), })\r\n                    .then(response => response.json())\r\n                    .then(data => this.setState({offers: data.data}));\r\n    }\r\n\r\n    // Sends an approval or decline message (notification)\r\n    sendMessage = async (notificationId, status) => {\r\n        await fetch(`${backendURL}/query`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                query: `UPDATE Notifications SET status = \"${status}\" WHERE notification_id = \"${notificationId}\"`,\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.error(error);\r\n        });\r\n        this.fetchNotifications();\r\n    }\r\n\r\n    // Dismisses a notification\r\n    // Either:\r\n    //   set that specific Toast component's display to none\r\n    //   mark as seen in DB?\r\n    dismissNotification = () => {}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home\">\r\n                <div className=\"clearfix\">\r\n                    <img className=\"bell2\" src={require(\"./images/bell.png\")} alt=\"Luther Bell\"/>\r\n                    <h1 className=\"heading1\">Home</h1>\r\n                    <h3 className=\"heading3\">See updates here</h3>\r\n                </div>\r\n                <p>Notifications</p>\r\n                <div className=\"notifyCard\">\r\n                    <div className=\"notifyBorder\">\r\n                        {/* TODO: Populate the nofications from db notifications table */}\r\n                        <Col className='notifyCol'>\r\n                            <Fragment>\r\n                            {this.state.requests && (\r\n                                this.state.requests.map(request =>\r\n                                    <Toast show={true} onClose={this.dismissNotification} key={request.notification_id}>\r\n                                        <Toast.Header>\r\n                                            <strong className=\"mr-auto\">Request</strong>\r\n                                            <small>from {request.offerer_email}</small>\r\n                                        </Toast.Header>\r\n                                        <Toast.Body>\r\n                                            {/* Replace this with the message of the notification */}\r\n                                            <p>This request is {request.status}.</p>\r\n                                        </Toast.Body>\r\n                                    </Toast>\r\n                                )\r\n                            )}\r\n                            </Fragment>\r\n                            {this.state.offers && (\r\n                                this.state.offers.map(offer =>\r\n                                    <Toast show={true} onClose={this.dismissNotification} key={offer.notification_id}>\r\n                                        <Toast.Header>\r\n                                            <strong className=\"mr-auto\">Offer</strong>\r\n                                            <small>from {offer.requester_email}</small>\r\n                                        </Toast.Header>\r\n                                        <Toast.Body>\r\n                                            {/* TODO: Add info on the request! Join Tables on item_id -- do we need to save the table name in a notification entry then??? */}\r\n                                            { offer.status === \"pending\"\r\n                                              ? (\r\n                                                <Fragment>\r\n                                                    <p>Please approve or decline this request:</p>\r\n                                                    <Button variant=\"success\" size=\"sm\" onClick={() => this.sendMessage(offer.notification_id, \"accepted\")}>Approve</Button>\r\n                                                    <Button variant=\"danger\" size=\"sm\" onClick={() => this.sendMessage(offer.notification_id, \"declined\")}>Decline</Button>\r\n                                                </Fragment>\r\n                                                )\r\n                                              : (\r\n                                                <p>You have {offer.status} this request.</p>\r\n                                            )}    \r\n                                            </Toast.Body>\r\n                                    </Toast>\r\n                                )\r\n                            )}\r\n                        </Col>\r\n                    </div>\r\n                </div>\r\n                {/* TODO: Show UserDetails_Modal if user is newly added to DB (edit showModal value) */}\r\n                {/* <UserDetailsModal closePhrase=\"Later\" show={this.state.showModal} title=\"Add your details!\"/> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport \"./About.css\";\r\n\r\nclass About extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"about\">\r\n                <img className=\"aboutUs\" src={require(\"./images/AboutUs.png\")} alt=\"About Us\"/>\r\n                <ul>\r\n                    <li>Luther students are able to connect with other Luther students and faculty</li>\r\n                    <li>Will help with textbook trading, transportation, etc.</li>\r\n                    <li>User friendly</li>\r\n                    <li>Come up with more</li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport \"./Categories.css\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nclass Categories extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row className=\"row\">\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"https://www.luther.edu/\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/clothing.png\" className=\"categoryImg\"/>\r\n                                <figcaption className=\"categoryFigcaption\">Clothing</figcaption>\r\n                            </figure>\r\n                        </a> \r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"categories\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/events.png\" className=\"categoryImg\"/> \r\n                                <figcaption className=\"categoryFigcaption\">Events</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"categories\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/food.png\" className=\"categoryImg\"/>\r\n                                <figcaption className=\"categoryFigcaption\">Food</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"categories\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/housing.png\" className=\"categoryImg\"/>\r\n                                <figcaption className=\"categoryFigcaption\">Housing</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"/lostandfound\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/lostfound.png\" className=\"categoryImg\"/> \r\n                                <figcaption className=\"categoryFigcaption\">Lost & Found</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"https://www.xkcd.com/\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/meme.png\" className=\"categoryImg\"/> \r\n                                <figcaption className=\"categoryFigcaption\">Meme</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"categories\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/mentor.png\" className=\"categoryImg\"/>\r\n                                <figcaption className=\"categoryFigcaption\">Mentorship</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"/misc\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/umbrella.png\" className=\"categoryImg\"/>\r\n                                <figcaption className=\"categoryFigcaption\">Misc.</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"categories\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/opportunities.png\" className=\"categoryImg\"/>\r\n                                <figcaption className=\"categoryFigcaption\">Opportunities</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"categories\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/projects.png\" className=\"categoryImg\"/>\r\n                                <figcaption className=\"categoryFigcaption\">Projects</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"categories\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/skills.png\" className=\"categoryImg\"/>\r\n                                <figcaption className=\"categoryFigcaption\">Skills</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"categories\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/social.png\" className=\"categoryImg\"/>\r\n                                <figcaption className=\"categoryFigcaption\">Social</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"textbooks\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/textbooks.png\" className=\"categoryImg\"/>\r\n                                <figcaption className=\"categoryFigcaption\">Textbooks</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2} xl={3}>\r\n                        <a href=\"categories\" className=\"nounderline\">\r\n                            <figure className=\"categoryFigure\">\r\n                                <Image src=\"https://campus-share-files.s3.us-east-2.amazonaws.com/transportation.png\" className=\"categoryImg\"/>\r\n                                <figcaption className=\"categoryFigcaption\">Transportation</figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Categories;","import React from 'react';\r\nimport { Button, Col, Form, InputGroup, Row } from 'react-bootstrap';\r\nimport './SignIn.css';\r\n\r\nconst bcrypt = require('bcryptjs');\r\n\r\nclass SignIn extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {errMsg: \"\"}\r\n        this.verifyLogin = this.verifyLogin.bind(this);\r\n    }\r\n\r\n    // Redirect to Home if User is Already Logged in\r\n    componentDidMount() { \r\n        if (global.customAuth.isAuthenticated) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    // check email exists and password is correct\r\n    verifyLogin = async (event) => {\r\n        event.preventDefault(); // Page Reload\r\n        let email = `${this.refs.email.value}@luther.edu`;\r\n        let password = this.refs.password.value;\r\n        let staySignedIn = this.refs.staySignedIn.checked;\r\n        let result;\r\n        await fetch(`${global.selectAPI}table=Users&field=password&condition=email='${email}'`, {\r\n            method: \"GET\",\r\n            headers: { \"x-api-key\": process.env.REACT_APP_API_KEY},\r\n        }).then(response => response.json()\r\n        .then(response => result = response));\r\n        if (result.length > 0) {\r\n            let hash = result[0].password;\r\n            bcrypt.compare(password, hash, function(err, res) {\r\n                // res is true or false\r\n                if (res) {\r\n                    global.customAuth.authenticate(email, staySignedIn);\r\n                    window.location.href = \"/\"; // Replace with page that was last trying to be accessed?\r\n                }\r\n            });\r\n            // If Window has not redirected in quarter of a second, password was incorrect\r\n            setTimeout(() => { this.setState({errMsg: \"Incorrect Password\"}); }, 250);\r\n        } else {\r\n            // Alert User that Email was not found in the Database\r\n            this.setState({errMsg: \"No account exists with that email.\"})\r\n        }\r\n    }\r\n\r\n    // Render Form to take username & password\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center\">\r\n                <Col sm={12} md={8} lg={6}>\r\n                    <Form onSubmit={this.verifyLogin}>\r\n                        <Form.Group as={Row} controlId=\"validationUsername\">\r\n                            <Form.Label column sm={2}>Email</Form.Label>\r\n                            <Col sm={10} md={10} lg={10}>\r\n                                <InputGroup>\r\n                                    <Form.Control type=\"text\" ref=\"email\" placeholder=\"norsekey\" required />\r\n                                        <InputGroup.Append>\r\n                                            <InputGroup.Text id=\"inputGroupAppend\">@luther.edu</InputGroup.Text>\r\n                                        </InputGroup.Append>\r\n                                    {/* Add @luther.edu ending */}\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                    Please use your valid luther.edu email.\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"validationPassword\">\r\n                            <Form.Label column sm={2}>Password</Form.Label>\r\n                            <Col sm={10} md={10} lg={10}>                    \r\n                                <Form.Control type=\"password\" ref=\"password\" placeholder=\"Password\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <p>{this.state.errMsg}</p>\r\n                        <Form.Group as={Row}>\r\n                            {/* Option for Resetting Password --> will need email functionality! */}\r\n                            <Col sm={{span: 10, offset:2}}>\r\n                                <a className=\"tinytext\" href=\"/recoverpassword\">Reset Password</a>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"staySignedIn\">\r\n                            {/* Option to stay signed in for 2 weeks */}\r\n                            <Col sm={{span: 10, offset:2}}>\r\n                                <Form.Check type=\"switch\" ref=\"staySignedIn\" label=\"Sign in for 2 weeks\"/>\r\n                                </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row}>\r\n                            <Col sm={{span: 10, offset:2}}>\r\n                                <Button variant=\"primary\" type=\"submit\">Sign In</Button>\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport { Button, Col, Form, InputGroup, Row } from 'react-bootstrap';\r\n\r\nconst bcrypt = require('bcryptjs');\r\n\r\nclass CreateAccount extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { accountCreated: false,\r\n                       errMsg: null,\r\n                       validEmail: true }\r\n    };\r\n\r\n    // Verify email DNE in DB\r\n    verifyEmail = async () => {\r\n        let email = `${this.refs.email.value}@luther.edu`;\r\n        let password = `${this.refs.password.value}`;\r\n        await fetch(`${global.selectAPI}table=Users&field=*&condition=email='${email}'`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'x-api-key': process.env.REACT_APP_API_KEY,\r\n                },\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => this.setState({validEmail: response.length === 0}))\r\n            .catch(err => console.log(err));\r\n        if (!this.state.validEmail) {\r\n            this.setState({errMsg: \"An account with this email already exists. Please sign in.\"})\r\n        } else {\r\n            this.savePassword(email, password);\r\n        }\r\n    }\r\n\r\n    // Add Password to DB\r\n    savePassword = async (email, password) => {\r\n        // Check that Password is valid\r\n        if (password !== '') {\r\n            // Hash Password\r\n            bcrypt.hash(password, 10, function(err, hash) {\r\n                fetch(`${global.insertAPI}table=Users&field=email,password&value='${email}','${hash}'`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'x-api-key': process.env.REACT_APP_API_KEY,\r\n                    },\r\n                })\r\n                .then(response => response.json())\r\n                .then(response => console.log(response))\r\n                .catch(err => console.log(err));\r\n            });\r\n            this.setState({accountCreated: true})\r\n        } else {\r\n            this.setState({errMsg: \"Please provide a valid password\"});\r\n        }\r\n    }\r\n\r\n    // Render Form to take email, password, and user info\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center\">\r\n                <Col sm={12} md={10} lg={8}>\r\n                    <Form>\r\n                        <h3>Welcome to Campus Share!</h3>\r\n                        {/* <p>Please fill out the following information to enhance your experience.</p> */}\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2}>Email</Form.Label>\r\n                        <Col sm={10} md={10} lg={10}>\r\n                            <InputGroup>\r\n                                <Form.Control type=\"text\" ref=\"email\" placeholder=\"norsekey\" required />\r\n                                    <InputGroup.Append>\r\n                                        <InputGroup.Text id=\"inputGroupAppend\">@luther.edu</InputGroup.Text>\r\n                                    </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"password\">\r\n                        <Form.Label column sm={2}>Password</Form.Label>\r\n                        <Col sm={10} md={10} lg={10}>                    \r\n                            <Form.Control type=\"password\" ref=\"password\" placeholder=\"Password\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <p>{this.state.errMsg}</p>\r\n                    {this.state.accountCreated && (\r\n                        <p>Account created! Please login here: <a href=\"/signin\">Sign In</a></p>\r\n                    )}\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{span: 10, offset:2}}>\r\n                            <Button variant=\"primary\" onClick={this.verifyEmail}>Create Account</Button>\r\n                        </Col>\r\n                    </Form.Group>     \r\n            </Form>\r\n                </Col>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateAccount;","// src/components/Profile.js\r\n\r\nimport React, { useState, Fragment } from \"react\"; //useState\r\nimport { Button, Col, Modal, Row} from \"react-bootstrap\"; // Modal\r\n// import UserDetails_Modal from \"./UserDetails_Modal\";\r\n\r\nimport \"./Profile.css\";\r\nimport ResetPassword from \"./ResetPassword\";\r\n\r\nconst backendURL = \"http://campus-share-backend.us-east-2.elasticbeanstalk.com\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  // TODO: Add \"change password\"\r\n  \r\n  let email = \"\";\r\n\r\n  const [showModal, setShow] = useState(false);\r\n\r\n  function handleShow() {\r\n    fetchUserData(email);\r\n    setShow(true);\r\n  };\r\n\r\n  function handleClose() {\r\n    setShow(false);\r\n  };\r\n\r\n  const saveChanges = async() => {\r\n    // to determine if an update to the database is necessary:\r\n    // check values of current selections against userdata variable\r\n    handleClose();\r\n  }\r\n\r\n  // Retrieve current user data from DB and store in userdata\r\n  let userdata;\r\n  async function fetchUserData(user_email) {\r\n    await fetch(`${backendURL}/userdata`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n          email: user_email\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => userdata = data);\r\n  }\r\n\r\n  let majors = [\"Accounting\", \"Africana Studies\", \"Allied Health Sciences\", \"Anthropology\", \"Art\", \r\n                  \"Biblical Languages\", \"Biology\",\r\n                  \"Chemistry\", \"Classics\", \"Communication Studies\", \"Computer Science\",\r\n                  \"Data Science\",\r\n                  \"Economics\", \"Elementary Education\", \"English\", \"Environmental Studies\", \"Exercise Science\", \r\n                  \"French\",\r\n                  \"German\",\r\n                  \"Health Promotion\",\r\n                  \"History\",\r\n                  \"International Studies\",\r\n                  \"Management\", \"Mathematics\", \"Mathematics/Statistics\", \"Music\",\" Music education\",\r\n                  \"Neuroscience\", \"Nordic Studies\", \"Nursing\", \r\n                  \"Philosophy\", \"Physics\", \"Political science\", \"Psychology\",\r\n                  \"Religion\",\r\n                  \"Social work\", \"Sociology\", \"Spanish\",\r\n                  \"Theatre\",\r\n                  \"Visual Communication\",\r\n                  \"Women and Gender Studies\"]\r\n  let majors_options = [];\r\n  for (var i = 0; i < majors.length; i++) {\r\n      majors_options.push(<option key={majors[i]}>{majors[i]}</option>)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>Profile Page</h1>\r\n      <Row>\r\n        <Col>\r\n          <p>Change Password</p>\r\n          <ResetPassword />\r\n        </Col>\r\n        <Col>\r\n          <p>Details</p>\r\n          <p>{userdata}</p>\r\n          <Button onClick={handleShow}>Edit</Button>\r\n          <Modal show={showModal}>\r\n            <Button onClick={saveChanges}>Save</Button>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;","// Form to Send Email To Reset Password\r\nimport React from 'react';\r\nimport { Button, Col, Form, InputGroup, Row } from 'react-bootstrap';\r\nimport emailjs from 'emailjs-com';\r\n\r\nimport './generic.css';\r\n\r\nrequire('dotenv').config()\r\nvar jwt = require('jwt-simple');\r\n\r\nclass RecoverPassword extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { accountExists: false,\r\n                       emailSent: false,\r\n                       hashedPassword: '',\r\n                       serverErrorMsg: '',\r\n                       userEmail: '',\r\n                       userErrorMsg: ''}\r\n        this.confirmAccountExists = this.confirmAccountExists.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({userEmail: event.target.value.toLowerCase()});\r\n    }\r\n\r\n    // Reset states on page reload\r\n    componentDidMount(){\r\n        // console.log(this.state.userEmail);\r\n        // if (this.state.userEmail !== '') {\r\n        //     let url = `${global.selectAPI}table=Users&field=*&condition=email='${this.state.userEmail}'`\r\n        //     fetch(url, {\r\n        //         method: 'GET',\r\n        //         headers: {\r\n        //             'x-api-key': process.env.REACT_APP_API_KEY,\r\n        //         }\r\n        //     })\r\n        //     .then(response => response.json())\r\n        //     .then(object => this.setState({accountExists: (object.length > 0), hashedPassword: object[0].password}))\r\n        //     .catch(err => this.setState({serverErrorMsg: err.message}));\r\n        //     this.sendEmail(this.state.email);\r\n        // }\r\n        this.setState({accountExists: false, emailSent: false, hashedPassword: '', serverErrorMsg: '', userErrorMsg: ''});\r\n    }\r\n\r\n    // Query DB for email\r\n    confirmAccountExists = async (event) => {\r\n        let norsekey = this.refs.email.value;\r\n        if (norsekey === \"\") {\r\n            this.setState({errorMessage: \"Norsekey is missing.\"})\r\n        } else {\r\n            let email = `${norsekey}@luther.edu`;\r\n            await fetch(`${global.selectAPI}table=Users&field=*&condition=email='${email}'`, {\r\n                method: 'GET',\r\n                headers: {'x-api-key': process.env.REACT_APP_API_KEY}\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => this.setState({accountExists: (object.length > 0), hashedPassword: object[0].password}))\r\n            .catch(err => this.setState({serverErrorMsg: err.message}));\r\n            this.sendEmail(email);\r\n        }\r\n    }\r\n\r\n    // confirmAccountExists = event => {\r\n    //     this.setState({userEmail: this.refs.email.value});\r\n    // }\r\n\r\n    // emailjs-com & jwt-simple\r\n    sendEmail = async (email) => {\r\n        if (this.state.accountExists) {\r\n            // Payload is NOT secure -- do not store password or JWT here!\r\n            let payload = { userEmail: email }\r\n            let d = new Date();\r\n            // Secret IS secure\r\n            let secret = `${this.state.hashedPassword}-${d.getTime()}`;\r\n            // Save secret to database for retrieval in ResetPassword\r\n            await fetch(`${global.insertAPI}table=Users&field=resetPasswordSecret&value='${secret}'`)\r\n                .catch(err => this.setState({serverErrorMsg: err.text}));\r\n            \r\n            // Set up email parameters with JWT-embedded link\r\n            let token = jwt.encode(payload, secret);\r\n            const templateParams = {\r\n                recipient: email,\r\n                password_reset_link: `${global.thisURL}/resetpassword/${payload.userEmail}/${token}`, // Update this with a generated JWT!\r\n                password_recovery: `${global.thisURL}/recoverpassword`\r\n            }\r\n            // Send Email\r\n            emailjs.send('gmail', 'password_recovery', templateParams, `'${process.env.REACT_APP_EMAILJS_USER_ID}'`)\r\n            .then((response) => {\r\n                // Show Success Message, Make sure Error Messages is Hidden\r\n                this.setState({emailSent: true, userErrorMsg: '', serverErrorMsg: ''});\r\n            }, (err) => {\r\n                this.setState({serverErrorMsg: err.text});\r\n            });\r\n        } else {\r\n            // Show Error, Hide Success\r\n            this.setState({userErrorMsg: 'No account exists with that email.', emailSent: false})\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Please enter your email to recover your password.</p>\r\n                <Form>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column xs={12} sm={12} md={1} lg={1} xl={1}>Email</Form.Label>\r\n                        <Col sm={6} md={6} lg={6}>\r\n                            <InputGroup>\r\n                                <Form.Control type=\"text\" ref=\"email\" value={this.state.userEmail} onChange={this.handleChange} placeholder=\"norsekey\" required />\r\n                                    <InputGroup.Append>\r\n                                        <InputGroup.Text id=\"inputGroupAppend\">@luther.edu</InputGroup.Text>\r\n                                    </InputGroup.Append>\r\n                            </InputGroup>\r\n\r\n                            {this.state.userErrorMsg !== '' && (\r\n                                <InputGroup>\r\n                                    <Form.Control type=\"text\" className=\"errorMsg\" readOnly defaultValue={this.state.userErrorMsg}/>\r\n                                </InputGroup>\r\n                            )}\r\n                            {this.state.serverErrorMsg !== '' && (\r\n                                <div className=\"errorMsg\">\r\n                                    <p>Uff da! We've encountered the following error:</p>\r\n                                    <p>{this.state.serverErrorMsg}</p>\r\n                                    <p>Contact tech support here: <a href=\"mailto:hoffka04@luther.edu?Subject=Your%20App%20Is%20Busted\" target=\"_top\">hoffka04@luther.edu</a></p>\r\n                                </div>\r\n                            )}\r\n                            {this.state.emailSent && (\r\n                                <InputGroup>\r\n                                    <Form.Control type=\"text\" className=\"successMsg\" readOnly defaultValue=\"Recovery email sent! Check your inbox for a link to reset your password.\"/>\r\n                                </InputGroup>\r\n                            )}\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" onClick={this.confirmAccountExists}>\r\n                        Recover Password\r\n                    </Button>\r\n                </Form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecoverPassword;","import React, { Fragment } from 'react';\r\nimport { Button, Form, Row, Modal, Spinner } from 'react-bootstrap';\r\nimport { MDBPopover, MDBPopoverBody, MDBPopoverHeader, MDBBtn, MDBContainer } from \"mdbreact\";\r\n\r\n// Custom imports\r\nimport './Listing.css';\r\n\r\nconst googleAPI = \"https://www.googleapis.com/books/v1/volumes\";\r\n\r\n// Add objects parameter; list of lists (info for InfoCards)\r\nclass Textbooks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { items: [],\r\n                       bookOptions: [],\r\n                       showModal: false,\r\n                       showConfirmDelete: false,\r\n                       API_KEY: \"AIzaSyB5xY_lIKmpdwTI50kPz-UYiBDmyiSoc5M\"}\r\n        this.handleConfirmDeleteShow = this.handleConfirmDeleteShow.bind(this);\r\n        this.handleConfirmDeleteClose = this.handleConfirmDeleteClose.bind(this);\r\n        this.handleModalShow = this.handleModalShow.bind(this);\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.fetchBooks = this.fetchBooks.bind(this);\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        await this.fetchBooks();\r\n    };\r\n\r\n    // fetchBooks: retrieves current listings from Textbooks table\r\n    fetchBooks = async () => {\r\n        let url = `${global.selectAPI}table=Textbooks&field=*`;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'x-api-key': process.env.REACT_APP_API_KEY,\r\n            }      \r\n        })\r\n        .then(response => response.json())\r\n        .then(json => this.setState({ items: json }))\r\n        .catch(err => alert(err));\r\n    };\r\n\r\n    // fetchVolumeInfo: on selection of author, populate ISBN & Photo about that volume\r\n    fetchVolumeInfo = async() => {\r\n        let title = this.refs.textbook_title;\r\n        if (title !== \"undefined\" && title.value !== \"\") {\r\n            title = title.value;\r\n            // Get & Display the Volume's ISBN # and Picture\r\n            await fetch(`${googleAPI}?q=${title}&key=${this.state.API_KEY}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ bookOptions: data.items }));\r\n        } else {\r\n            alert(\"Please enter a title before searching Google Books.\")\r\n        }\r\n    };\r\n\r\n    // handleModalShow: shows the Add Listing Modal on button click \r\n    handleModalShow = () => {\r\n        this.setState({showModal: true});\r\n    };\r\n\r\n    // handleModalClose: closes the Add Listing Modal on button click\r\n    handleModalClose = () => {\r\n        this.setState({showModal: false});\r\n        this.fetchBooks();\r\n    };\r\n\r\n    // handleSubmit: sends book info from Add Listing Modal to DB & refreshes the component\r\n    handleSubmit = async (event) => {\r\n        let title = this.refs.textbook_title;\r\n        // Check that the ref exists and title is not blank\r\n        if (title !== \"undefined\" && title.value !== '') {\r\n            let gbID = this.refs.GoogleBookID;\r\n            // get info on title from Google Books\r\n            console.log(`${googleAPI}/${gbID.value}?key=${this.state.API_KEY}`);\r\n            let gbTitle;\r\n            await fetch(`${googleAPI}/${gbID.value}?key=${this.state.API_KEY}`)\r\n                            .then(response => response.json()\r\n                            .then(data => gbTitle = data));\r\n            let gbVolInfo = gbTitle.volumeInfo;\r\n            console.log(gbVolInfo);\r\n            let gbBookTitle = gbVolInfo.title;\r\n            let gbBookAuthor = gbVolInfo.authors[0]; // There may be multiple authors!\r\n            // let gbBookISBNs = gbVolInfo.industryIentifiers;\r\n            let gbBookISBN = \"XXX-X-XXX-XXXXX-X\";\r\n            // for (let isbnNum in gbBookISBNs) {\r\n            //     if (isbnNum.identifier.type === \"ISBN_13\") {\r\n            //         gbBookISBN = isbnNum.identifier.splice(3, 0, \"-\")\r\n            //     }\r\n            // }\r\n\r\n            let gbBookImage = gbVolInfo.imageLinks.smallThumbnail;\r\n            console.log(`\"${gbBookTitle}\", \"${gbBookAuthor}\", \"${gbBookISBN}\", \"${global.customAuth.email}\", \"${gbBookImage}\"`);\r\n\r\n            // TODO: auto-populate author & ISBN, and grab photo from Google Books API\r\n            // I think we need this to be an async function so we wait for the Promise to see if the data was saved properly.\r\n            // let rv = await fetch(`${global.backendURL}/query`, {\r\n            //             method: \"POST\",\r\n            //             headers: { \"Content-Type\": \"application/json\" },\r\n            //             body: JSON.stringify({\r\n            //                 query: `INSERT INTO Textbooks (book_title, book_author, book_isbn, owner, book_image) VALUES (\"${gbBookTitle}\", \"${gbBookAuthor}\", \"${gbBookISBN}\", \"${global.customAuth.email}\", \"${gbBookImage}\")`,\r\n            //             }),\r\n            //       }).catch(error => {\r\n            //         console.error(error);\r\n            //     });\r\n            let rv = await fetch(`${global.insertAPI}table=Textbooks&field=book_title, book_author, book_isbn, owner, book_image&value=\"${gbBookTitle}\", \"${gbBookAuthor}\", \"${gbBookISBN}\", \"${global.customAuth.email}\", \"${gbBookImage}\"`)\r\n                .catch(err => console.log(err));\r\n            // Change this to alert user if their form was NOT submitted properly.\r\n            if (rv.status !== 200) {\r\n                alert(\"Uff da! Something went wrong, please try again.\")\r\n            } \r\n            else {\r\n                // Response was status 200 - OK  (Data was successfully saved)  \r\n                this.handleModalClose();\r\n                this.fetchBooks();\r\n            }\r\n        } else {\r\n            alert('Please provide a valid title.')\r\n        }\r\n    }\r\n\r\n    sendRequest = async (owner, bookID) => {\r\n        if (owner !== global.customAuth.email) {\r\n            let response = await fetch(`${global.backendURL}/query`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify({\r\n                    query: `INSERT INTO Notifications (requester_email, offerer_email, item_id, source_table) VALUES (\"${global.customAuth.email}\", \"${owner}\", \"${bookID}\", \"Textbooks\");`,\r\n                })\r\n            })\r\n            if (response.status !== 200) {\r\n                alert(\"Uff da! Something went wrong, please try again.\");\r\n            } else {\r\n                alert(\"Request successfully sent!\")\r\n            }\r\n            console.log(response);\r\n        } else {\r\n            alert(\"You are the owner of this title. Please look for another title.\")\r\n        }\r\n    }\r\n\r\n    handleConfirmDeleteShow = () => {this.setState({showConfirmDelete: true})};\r\n    handleConfirmDeleteClose = () => {this.setState({showConfirmDelete: false})};\r\n\r\n    deleteItem = async () => {\r\n        // Delete item from Database\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <h1 className=\"categoryName\">{this.props.sectionTitle}</h1>\r\n                    {global.customAuth.isAuthenticated && (\r\n                        <Button onClick={this.handleModalShow}>Add Listing</Button>\r\n                    )}\r\n                </Row>\r\n                <p className=\"categoryDesc\">Care to share or borrow a book?</p>\r\n                <Row>\r\n                    {typeof this.state.items !== \"undefined\" && (\r\n                        // Retry Row and Col?\r\n                        <MDBContainer>\r\n                            <Row className=\"mdbpopoverDiv\">\r\n                                {this.state.items.map(item =>\r\n                                    <MDBPopover\r\n                                        placement=\"bottom\"\r\n                                        popover\r\n                                        clickable\r\n                                        key={item.book_id}\r\n                                        className=\"mdbpopover\"\r\n                                    >\r\n                                        <MDBBtn className=\"listingBtn\">\r\n                                            <figure className=\"floatLeft\">\r\n                                                <img className=\"listingImg\" src={item.book_image||\"https://cdn0.iconfinder.com/data/icons/reading-5/384/Generic_book_file_type-512.png\"} alt={item.book_title}/>\r\n                                                <figcaption>{item.book_title}</figcaption>\r\n                                            </figure>\r\n                                        </MDBBtn>\r\n                                        <div>\r\n                                            <MDBPopoverHeader>{item.book_title}</MDBPopoverHeader>\r\n                                            <MDBPopoverBody>\r\n                                                <p style={{display:\"none\"}} ref=\"bookID\">{item.book_id}</p>\r\n                                                <p className=\"p\">{item.book_author}</p>\r\n                                                <p className=\"p\">{item.course}</p>\r\n                                                <p className=\"p\">{item.loanPeriod}</p>\r\n                                                { global.customAuth.email !== \"\" &&\r\n                                                    ( item.owner !== global.customAuth.email\r\n                                                        ? <Fragment>\r\n                                                            <p className=\"p\" ref=\"owner\">{item.owner}</p>\r\n                                                            <Button variant=\"success\" size=\"sm\" onClick={() => this.sendRequest(item.owner, item.book_id)}>Request</Button>\r\n                                                        </Fragment>\r\n                                                        : ( this.state.showConfirmDelete\r\n                                                            ? <Fragment>\r\n                                                                <p>Are you sure you want to delete this item?</p>\r\n                                                                <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => this.handleConfirmDeleteClose}>Cancel</Button>\r\n                                                                <Button variant=\"danger\" size=\"sm\" onClick={() => this.deleteItem(item.id)}>Yes, Delete</Button>\r\n                                                              </Fragment>\r\n                                                            : <Button variant=\"danger\" size=\"sm\" onClick={() => this.handleConfirmDeleteShow}>Delete</Button>\r\n                                                            )\r\n                                                    )\r\n                                                }\r\n                                            </MDBPopoverBody>\r\n                                        </div>\r\n                                    </MDBPopover>\r\n                                    //<InfoCard className=\"infoCard\" image={item.book_image} title={item.book_title} author={item.book_author} course={item.course} loanPeriod={item.book_loan_period}/>\r\n                                )}\r\n                            </Row>\r\n                        </MDBContainer>\r\n                    )}\r\n                    {typeof this.state.items === \"undefined\" && (\r\n                        <Fragment>\r\n                            &nbsp;\r\n                            <Spinner animation=\"border\" size=\"md\"/>\r\n                            &nbsp;Loading...\r\n                        </Fragment>\r\n                    )}\r\n                </Row>\r\n\r\n                {/* Add Title Modal */}\r\n                <Modal show={this.state.showModal} onHide={this.handleModalClose}>\r\n                    <Modal.Header closeButton>\r\n                        {/* Change to Dropdown of possible listing categories? */}\r\n                        <Modal.Title>Add a listing to {this.props.sectionTitle}</Modal.Title>\r\n                        <Modal.Body>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                {/* Refactor for generic listing (not just Textbooks) */}\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control type=\"text\" ref=\"textbook_title\" placeholder=\"Enter Title Here\" />\r\n                                {/* version 1: click button to search for volume info */}\r\n                                <Button variant=\"outline-secondary\" onClick={this.fetchVolumeInfo}>\r\n                                    Search for Title\r\n                                </Button>\r\n                                {this.state.bookOptions.length > 0 && (\r\n                                    <Form.Group controlId=\"titleSelect\">\r\n                                        <Form.Label>Select title</Form.Label>\r\n                                        <Form.Control ref=\"GoogleBookID\" as=\"select\">\r\n                                            {this.state.bookOptions.map(bookOption =>\r\n                                                // each option's value is the volume's id\r\n                                                <option value={bookOption.id} key={bookOption.id}>Author: {bookOption.volumeInfo.authors}&nbsp;Publisher: {bookOption.volumeInfo.publisher}&nbsp;&copy;{bookOption.volumeInfo.publishedDate}</option>\r\n                                            )}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                )}\r\n                                <Button variant=\"success\" type=\"submit\" onClick={this.handleSubmit}>\r\n                                    Submit\r\n                                </Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal.Header>\r\n\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Textbooks;\r\n","import React, { Fragment } from 'react';\r\nimport { Button, Col, Form, InputGroup, Modal, Row, Spinner } from 'react-bootstrap';\r\nimport { MDBPopover, MDBPopoverBody, MDBPopoverHeader, MDBBtn } from \"mdbreact\";\r\nimport S3FileUpload from 'react-s3';\r\n\r\nimport './Listing.css';\r\n\r\nconst config = {\r\n    bucketName: 'campus-share-files',\r\n    dirName: 'Misc',\r\n    region: 'us-east-2', // Ohio\r\n    accessKeyId: process.env.REACT_APP_S3_ACCESS_KEY_ID,\r\n    secretAccessKey: process.env.REACT_APP_S3_SECRET_ACCESS_KEY,\r\n};\r\n\r\nclass Misc extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { errMsg: null,\r\n                       file: null,\r\n                       fileLocation: null,\r\n                       fileURL: null,\r\n                       items: null,\r\n                       showModal: false}\r\n        this.fetchItems = this.fetchItems.bind(this);\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n        this.handleModalShow = this.handleModalShow.bind(this);\r\n        // this.deleteItem = this.deleteItem.bind(this);\r\n        // this.handleSubmit = this.handleSubmit.bind(this);\r\n        // this.sendRequest = this.sendRequest.bind(this);\r\n    };\r\n\r\n    componentDidMount(){this.fetchItems();}\r\n\r\n    deleteItem = async (item_id) => {\r\n        await fetch(`${global.deleteAPI}table=Misc&condition=item_id=${item_id}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'x-api-key': process.env.REACT_APP_API_KEY,\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .catch(err => console.log(err));\r\n        this.fetchItems();\r\n    };\r\n\r\n    // fetchItems: retrieves current listings from Misc table\r\n    fetchItems = async () => {\r\n        await fetch(`${global.selectAPI}table=Misc&field=*`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'x-api-key': process.env.REACT_APP_API_KEY,\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(object => this.setState({ items: object }));\r\n    };\r\n\r\n    handleImageUpload = (event) => {\r\n        if (event.target.files.length > 0) {\r\n            this.setState({file:event.target.files[0], fileURL: URL.createObjectURL(event.target.files[0])})\r\n        }\r\n    }\r\n\r\n    // Modal Functions\r\n    handleModalClose = () => {this.setState({showModal: false, file: null})};\r\n    handleModalShow = () => {this.setState({showModal: true})};\r\n    \r\n    handleSubmit = async () => {\r\n        let item_name = this.refs.item_name.value;\r\n        let item_desc = this.refs.item_desc.value;\r\n        let item_img = this.state.fileURL;\r\n        let loan_start = this.refs.loan_start.value;\r\n        let loan_end = this.refs.loan_end.value;\r\n        if (!item_name) {\r\n            this.setState({errMsg: \"Please provide a name for this item\"});\r\n        } else if (!item_desc) {\r\n            this.setState({errMsg: \"Please provide a description for this item\"});\r\n        } else if (!item_img) {\r\n            this.setState({errMsg: \"Please provide an image for this item\"});\r\n        } else if (!loan_start) {\r\n            this.setState({errMsg: \"Please provide a loan start for this item\"});\r\n        } else if (loan_end && (loan_end < loan_start)) {\r\n            this.setState({errMsg: \"Please provide a valid loan end (currently set to before start)\"});\r\n        } else {\r\n            this.setState({errMsg: null});\r\n            // Upload to S3\r\n            await this.uploadToS3();\r\n    \r\n            if (!this.state.errMsg) {\r\n                // Save to DB\r\n                await this.saveToDB(item_name, item_desc, this.state.fileLocation, loan_start, loan_end);\r\n                \r\n                // Update View of Item Listings\r\n                this.fetchItems();\r\n\r\n                // Lastly, close the modal\r\n                this.handleModalClose();\r\n            }\r\n        }\r\n    }\r\n\r\n    saveToDB = async(item_name, item_desc, item_img, loan_start, loan_end) => {\r\n        let url = `${global.insertAPI}table=Misc&field=item_name,item_desc,item_img,loan_start,loan_end,owner&value='${item_name}','${item_desc}','${item_img}','${loan_start}','${loan_end}','${global.customAuth.email}'`;\r\n        await fetch(url, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'x-api-key': process.env.REACT_APP_API_KEY,\r\n                    }\r\n                })\r\n                .then(response => console.log(response))\r\n                .catch(err => console.log(err));\r\n    }\r\n\r\n    uploadToS3 = async () => {\r\n        await S3FileUpload.uploadFile(this.state.file, config)\r\n        .then(data => this.setState({fileLocation: data.location}))\r\n        .catch(err => this.setState({errMsg: err}));\r\n    }\r\n\r\n\r\n    // sendRequest -> needs ID of item & source table\r\n\r\n    // Render Page\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Col xs={8} sm={8} md={10} lg={10} xl={10}>\r\n                        <h1 className=\"categoryName\">Misc</h1>\r\n                    </Col>\r\n                    <Col className=\"justify-content-md-end\">\r\n                        {/* Add Listing Button - Only shown if current user is logged in */}\r\n                        { global.customAuth.isAuthenticated && (\r\n                            <Button onClick={this.handleModalShow}>Add Listing</Button>\r\n                            )}\r\n                    </Col>\r\n                </Row>\r\n                <p className=\"categoryDesc\">mi-sə-ˈlā-nē-əs: consisting of many things of different sorts</p>\r\n        \r\n                {!this.state.items\r\n                // No items have been fetched yet\r\n                ? (\r\n                    <Row>\r\n                        <Spinner animation=\"grow\" size=\"sm\" />\r\n                        <p>Loading...</p>\r\n                    </Row>\r\n                )\r\n                : (\r\n                    <Fragment>\r\n                        {this.state.items.length === 0\r\n                         ? // No items exist\r\n                            (<p>No items to display!</p>)\r\n                         : // Render Items\r\n                            <Fragment>\r\n                                {this.state.items.map(item => \r\n                                    <MDBPopover\r\n                                            placement=\"bottom\"\r\n                                            popover\r\n                                            clickable\r\n                                            key={item.item_id}\r\n                                            className=\"mdbpopover\"\r\n                                        >\r\n                                            <MDBBtn className=\"listingBtn\">\r\n                                                <figure className=\"floatLeft\">\r\n                                                    <img className=\"listingImg\" src={item.item_img||\"https://cdn1.iconfinder.com/data/icons/image-manipulations/100/13-512.png\"} alt={item.item_name}/>\r\n                                                    <figcaption>{item.item_name}</figcaption>\r\n                                                </figure>\r\n                                            </MDBBtn>\r\n                                            <div>\r\n                                                <MDBPopoverHeader>{item.item_name}</MDBPopoverHeader>\r\n                                                <MDBPopoverBody>\r\n                                                    <p style={{display:\"none\"}} ref=\"itemID\">{item.item_id}</p>\r\n                                                    <p className=\"p\">{item.item_desc}</p>\r\n                                                    <p className=\"p\">{item.loan_period}</p>\r\n                                                    {item.owner === global.customAuth.email\r\n                                                    ? <Fragment>\r\n                                                        <Button variant=\"danger\" size=\"sm\" onClick={() => this.deleteItem(item.item_id)}>Delete</Button>\r\n                                                      </Fragment>\r\n                                                    : <Fragment>\r\n                                                        <p className=\"p\" ref=\"owner\">{item.owner}</p>\r\n                                                        <Button variant=\"success\" size=\"sm\" onClick={() => this.sendRequest(item.owner, item.item_id)}>Request</Button>\r\n                                                      </Fragment>\r\n                                                    }\r\n                                                </MDBPopoverBody>\r\n                                            </div>\r\n                                        </MDBPopover>\r\n                                )}\r\n                            </Fragment>\r\n                        }\r\n                    </Fragment>\r\n                )}\r\n                {/* Add Listing Modal */}\r\n                <Modal show={this.state.showModal} onHide={this.handleModalClose} centered size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add a new listing to the {this.props.categoryName} Category</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Col>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend><InputGroup.Text>Item Name</InputGroup.Text></InputGroup.Prepend>\r\n                                <Form.Control type=\"text\" ref=\"item_name\" placeholder=\"Enter Name Here\" />\r\n                            </InputGroup>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm={3}>Description:</Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control as=\"textarea\" rows=\"3\" ref=\"item_desc\" placeholder=\"Please describe your item here\" />\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>Image Upload</p>\r\n                            <input type=\"file\" onChange={this.handleImageUpload} accept=\"image/gif, image/jpeg, image/png\" />\r\n                            {this.state.fileURL !== null && (<img src={this.state.fileURL} alt=\"\" className=\"uploadPreview\"/>)}\r\n                            \r\n                            {/* Loan Period -- Start Date & Time to End Date & Time? \"Any\" Option? Permanent? */}\r\n                            <p>Loan Period (Loan Start Required)</p>\r\n                            <input type=\"date\" ref=\"loan_start\"/>\r\n                            <input type=\"date\" ref=\"loan_end\"/>\r\n                        </Col>\r\n\r\n                        <p>{this.state.errMsg}</p>\r\n\r\n                        <Row className=\"bottomRow\">\r\n                            <Col xs={12} sm={12} md={3} lg={3} xl={3}>\r\n                                <Button className=\"btn-submit\" variant=\"success\" onClick={this.handleSubmit}>Add Listing</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Misc;\r\n","import React from 'react';\r\nimport { Button, Col, Form, InputGroup, Row } from 'react-bootstrap';\r\n\r\nimport Listing from './Listing';\r\nimport S3FileUpload from 'react-s3';\r\n\r\n// Style\r\nimport './Listing.css';\r\n\r\nconst config = {\r\n    bucketName: 'campus-share-files',\r\n    dirName: 'LostAndFound',\r\n    region: 'us-east-2', // Ohio\r\n    accessKeyId: process.env.REACT_APP_S3_ACCESS_KEY_ID,\r\n    secretAccessKey: process.env.REACT_APP_S3_SECRET_ACCESS_KEY,\r\n};\r\n\r\nclass LostAndFound extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {file: null,\r\n                      fileURL: null,\r\n                      fileLocation: null,\r\n                      errMsg: null};\r\n\r\n    }\r\n\r\n    handleImageUpload = (event) => {\r\n        if (event.target.files.length > 0) {\r\n            this.setState({file:event.target.files[0], fileURL: URL.createObjectURL(event.target.files[0])})\r\n        }\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        let item_name = this.refs.item_name.value;\r\n        let datetime_found = this.refs.item_name.value;\r\n        let location_found = this.refs.location_found.value;\r\n        let item_img = this.state.fileURL;\r\n        if (!item_name) {\r\n            this.setState({errMsg: \"Please provide a name for this item\"});\r\n        } else if (!datetime_found) {\r\n            this.setState({errMsg: \"Please provide the day and time this item was found\"});\r\n        } else if (!location_found) {\r\n            this.setState({errMsg: \"Please provide the location this item was found\"});\r\n        } else if (!item_img) {\r\n            this.setState({errMsg: \"Please provide an image of this item\"});\r\n        } else {\r\n            this.setState({errMsg: null});\r\n            // Upload to S3\r\n            this.uploadToS3();\r\n    \r\n            if (!this.state.errMsg) {\r\n                // Save to DB\r\n                this.saveToDB(item_name, datetime_found, location_found, item_img);\r\n                \r\n                // Lastly, close the modal\r\n            }\r\n        }\r\n    }\r\n\r\n    uploadToS3 = async () => {\r\n        await S3FileUpload.uploadFile(this.state.file, config)\r\n        .then(data => this.setState({fileLocation: data.location}))\r\n        .catch(err => this.setState({errMsg: err}));\r\n    }\r\n\r\n    saveToDB = async(item_name, datetime_found, location_found, item_img) => {\r\n        await fetch(`${global.insertAPI}table=LostAndFound&field=item_name, datetime_found, location_found, item_img, discoverer&value='${item_name}', ${datetime_found}, '${location_found}', '${item_img}', '${global.customAuth.email}'`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'x-api-key': process.env.REACT_APP_API_KEY,\r\n                    }\r\n                })\r\n                .then(response => console.log(response))\r\n                .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Listing categoryName=\"Lost & Found\"\r\n                     categoryDesc='Exception: \"Lost time is never found again\" - Benjamin Franklin'\r\n                     form={\r\n                        <Form>\r\n                            {/* Item Name */}\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend><InputGroup.Text>Item Name</InputGroup.Text></InputGroup.Prepend>\r\n                                <Form.Control type=\"text\" ref=\"item_name\" placeholder=\"...\"/>\r\n                            </InputGroup>\r\n                            {/* Location Found */}\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend><InputGroup.Text>Location Found</InputGroup.Text></InputGroup.Prepend>\r\n                                <Form.Control type=\"text\" ref=\"location_found\" placeholder=\"...\" />\r\n                            </InputGroup>\r\n                            {/* Date & Time Found */}\r\n                            <input type=\"datetime-local\"/>\r\n                            {/* Image */}\r\n                            <input type=\"file\" onChange={this.handleImageUpload} accept=\"image/gif, image/jpeg, image/png\" />\r\n                            {this.state.fileURL !== null && (<img src={this.state.fileURL} alt=\"\" className=\"uploadPreview\"/>)}\r\n\r\n                            <p>{this.state.errMsg}</p>\r\n\r\n                            <Row className=\"bottomRow\">\r\n                                <Col xs={12} sm={12} md={3} lg={3} xl={3}>\r\n                                    <Button className=\"btn-submit\" variant=\"success\" onClick={this.handleSubmit}>Add Listing</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                     }\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nexport default LostAndFound;","import React from 'react';\r\nconst bcrypt = require('bcryptjs');\r\n\r\nexport default function Backdoor () {\r\n    \r\n    let hashedPassword = '';\r\n\r\n\r\n    bcrypt.hash('Alohomora6ta', 10, function(err, hash){\r\n        console.log(hash);\r\n        hashedPassword = hash;\r\n    });\r\n\r\n    return (\r\n        <p>{hashedPassword}</p>\r\n    )\r\n\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Image from 'react-bootstrap/Image'\r\nimport \"./Slideshow.css\";\r\n\r\n\r\nfunction ControlledCarousel() {\r\n    const [index, setIndex] = React.useState(0);\r\n    const [direction, setDirection] = React.useState(null);\r\n  \r\n    const handleSelect = (selectedIndex, e) => {\r\n      setIndex(selectedIndex);\r\n      setDirection(e.direction);\r\n    };\r\n  \r\n    return (\r\n      <Carousel activeIndex={index} direction={direction} onSelect={handleSelect}>\r\n        <Carousel.Item>\r\n            <Image className=\"carouselImg\" src=\"https://elasticbeanstalk-us-east-2-875968549276.s3.us-east-2.amazonaws.com/banner1.png\" fluid />\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n            <Image className=\"carouselImg\" src=\"https://elasticbeanstalk-us-east-2-875968549276.s3.us-east-2.amazonaws.com/banner_2.png\" fluid />\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    );\r\n  }\r\n\r\nexport default ControlledCarousel;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n// Custom Imports\r\nimport \"./Home.css\";\r\nimport ControlledCarousel from \"./Slideshow\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            exampleAPICallData: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let url = 'https://h1xqnteg60.execute-api.us-east-2.amazonaws.com/SelectProd?table=Textbooks&field=book_author';\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'x-api-key': 'dKEhYInqF09xERGUZcQQ3aCKELroAbsk1vVZLhb3',\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({\r\n                exampleAPICallData: json,\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home\">\r\n                <ControlledCarousel id=\"slideshow\"/>\r\n                <div className=\"text-center\">\r\n                    <a href=\"/signin\"><Button variant=\"success\">Sign In</Button></a>\r\n                    <a href=\"/createaccount\"><Button variant=\"secondary\">Create Account</Button></a>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <a href=\"/categories\">Continue as guest</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n// Use this reference anytime the backend is needed\r\nglobal.backendURL = \"http://campus-share-backend.us-east-2.elasticbeanstalk.com\";\r\nglobal.thisURL = \"http://localhost:3000\";\r\nglobal.selectAPI = \"https://h1xqnteg60.execute-api.us-east-2.amazonaws.com/SelectProd?\";\r\nglobal.deleteAPI = \"https://a2cisw63pb.execute-api.us-east-2.amazonaws.com/Prod?\";\r\nglobal.insertAPI = \"https://00tyqs4c74.execute-api.us-east-2.amazonaws.com/Prod?\";\r\nglobal.updateAPI = \"https://qa1gniaexi.execute-api.us-east-2.amazonaws.com/Prod?\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/campushare_logo.2ea92f96.png\";","module.exports = __webpack_public_path__ + \"static/media/bell.a2e70fa6.png\";","module.exports = __webpack_public_path__ + \"static/media/AboutUs.e21e8f56.png\";","import React, { Fragment } from 'react';\r\nimport { Button, Form, Spinner} from 'react-bootstrap';\r\nconst jwt = require('jwt-simple');\r\nconst bcrypt = require('bcryptjs');\r\n\r\n// Requires JWT to access this component's page\r\n// Two views of the component: one for the page, and one for the user's profile?\r\n\r\n\r\nclass ResetPassword extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.savePassword = this.savePassword.bind(this);\r\n        // this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = { userEmail: '',\r\n                       hashedPassword: '',\r\n                       secret: '',\r\n                       token: '',\r\n                       validated: false,\r\n                       passwordSaved: false,\r\n                       serverErrorMsg: '',\r\n                       showError: false}\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        let url_parts = window.location.href.split('/');\r\n        let email = url_parts[4];\r\n        let JWT = url_parts[5];\r\n        this.setState({userEmail: email, token: JWT});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSecret();\r\n        this.validate();\r\n    }\r\n\r\n    getSecret = async () => {\r\n        await fetch(`${global.selectAPI}table=Users&field=*&condition=email='${this.state.userEmail}'`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': true,\r\n                'x-api-key': global.APIkey,\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(object => this.setState({secret: object[0].resetPasswordSecret, hashedPassword: object[0].password}))\r\n        .catch(err => this.setState({serverErrorMsg: err.text}));\r\n    };\r\n\r\n    // Validate JWT\r\n    validate = async () => {\r\n        if (this.state.hashedPassword === this.state.secret.slice(0,(this.state.hashedPassword.length))) {\r\n            try {\r\n                let decoded = jwt.decode(this.state.token, this.state.secret);\r\n                if (decoded === this.state.userEmail) {\r\n                    this.setState({validated: true});\r\n                } else {\r\n                    this.setState({showError: true});\r\n                }\r\n            } catch(err) {\r\n                this.setState({showError: true});\r\n            }\r\n        } else {\r\n            this.setState({showError: true});\r\n        }\r\n    }\r\n\r\n    // Save Password to DB (HASH & SALT!)\r\n    // Also need to know which user it is -- could probably pull from URL parameter! (still not secure, though...)\r\n    savePassword = async (password) => {\r\n        bcrypt.hash(password, 8, async function(err, hash){\r\n            await fetch(`${global.backendURL}/query`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify({\r\n                    query: `UPDATE Users SET password='${hash}' WHERE email='${global.customAuth.email}`,\r\n                })\r\n            }).then(response => response.json()\r\n            .then(console.log(response)));\r\n            // Check response to make sure this goes through! before reloading the page.\r\n        });\r\n        // Require users to sign in again?\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        let password = this.refs.newPassword.value;\r\n        console.log(password);\r\n        if (password.length === 0) {\r\n            alert(\"no password\");\r\n        } else {\r\n            this.savePassword(this.refs.newPassword.value);\r\n            alert(\"password saved successfully!\")\r\n            setTimeout(5000);\r\n            this.setState({validated: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n            {/* Only show form if user is validated */}\r\n            { this.state.validated === false\r\n                // Spinner for Loading Validation\r\n                ? ( this.state.showError === false\r\n                    ? (<Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                       </Spinner>)\r\n                    : (<Fragment>\r\n                            <p>This link is not valid. Please request a new password reset link:</p>\r\n                            <a href=\"/recoverpassword\">Request New Link</a>\r\n                       </Fragment>)\r\n                  )\r\n                // Form to change password\r\n                :   (<Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"newPassword\">\r\n                            <Form.Label>New Password</Form.Label>\r\n                            <Form.Control required type=\"password\" ref=\"newPassword\" placeholder=\"Password\" />\r\n                            <Form.Control.Feedback type=\"invalid\">Please enter a password.</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>)\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResetPassword;","import React, { Fragment } from 'react';\r\nimport { Button, Col, Modal, Row } from 'react-bootstrap';\r\nimport { MDBContainer } from \"mdbreact\";\r\n\r\nimport \"./Listing.css\";\r\n\r\n// Listing: Parent Component which Categories can inherit from\r\n//  props must include:\r\n//      categoryName    Name of the category page\r\n//      categoryDesc    Short, one-line description or quote\r\n//      tableName       Name of the associated table in the Database\r\n\r\nclass Listing extends React.Component {\r\n\r\n    // Item Listing\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { items: [], // to hold results from querying the DB table\r\n                       showModal: false,\r\n                       showConfirmDelete: false\r\n                     };\r\n        this.fetchItems = this.fetchItems.bind(this);\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n        this.handleModalShow = this.handleModalShow.bind(this);\r\n        this.handleConfirmDeleteShow = this.handleConfirmDeleteShow.bind(this);\r\n        this.handleConfirmDeleteClose = this.handleConfirmDeleteClose.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    // Fetch Initial Items\r\n    componentDidMount = async () => {this.fetchItems()};\r\n\r\n    // Modal Functions\r\n    handleModalClose = () => {this.setState({showModal: false})};\r\n    handleModalShow = () => {this.setState({showModal: true})};\r\n    handleConfirmDeleteClose = () => {this.setState({showConfirmDelete: false})};\r\n    handleConfirmDeleteShow = () => {this.setState({showConfirmDelete: true})};\r\n\r\n    // Add Item Listing\r\n    handleSubmit = () => {\r\n        // TODO: Take values of all fields from the form and fill in a new entry in the table\r\n\r\n        // Add Upload to S3\r\n        \r\n    }\r\n\r\n    // Retrieve Items in current category from DB\r\n    fetchItems = async () => {\r\n        await fetch(`${global.backendURL}/query`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({\r\n                query: `SELECT * FROM ${this.props.tableName}`,\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(object => this.setState({ items: object.data }));\r\n    }\r\n\r\n    // Request Item: create new notifitaction\r\n    requestItem = async (requester_email, offerer_email, item_id, source_table) => {\r\n        await fetch(`${global.backendURL}/query`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({\r\n                query: `INSERT INTO Notifications (requester_email, offerer_email, item_id, source_table) VALUES (\"${requester_email}\", \"${offerer_email}\", \"${item_id}\", \"${source_table}\");`,\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ items: data }));\r\n    }\r\n\r\n    // Delete Item: remove item from DB; current user must be owner\r\n    deleteItem = async () => {\r\n        console.log(\"TODO: Delete item with call to backend\");\r\n    }\r\n\r\n\r\n    // Render Page\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Col xs={8} sm={8} md={10} lg={10} xl={10}>\r\n                        <h1 className=\"categoryName\">{this.props.categoryName}</h1>\r\n                    </Col>\r\n                    <Col className=\"justify-content-md-end\">\r\n                        {/* Add Listing Button - Only shown if current user is logged in */}\r\n                        { global.customAuth.isAuthenticated && (\r\n                            <Button onClick={this.handleModalShow}>Add Listing</Button>\r\n                            )}\r\n                    </Col>\r\n                </Row>\r\n                <p className=\"categoryDesc\">{this.props.categoryDesc}</p>\r\n\r\n                {/* Modal - seen when Add Listing Button is clicked*/}\r\n                <Modal show={this.state.showModal} onHide={this.handleModalClose} centered size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add a new listing to the {this.props.categoryName} Category</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {/* Iterate though fields for DB table? */}\r\n                        {this.props.form}\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                {/* <Modal show={this.state.showConfirmDelete} onHide={this.handleConfirmDeleteClose} animation={false} centered size=\"sm\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Item</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form onSubmit={this.deleteItem}>\r\n                            <p>Are you sure you want to delete this item?</p>\r\n                            <Button variant=\"\" onClick={this.handleConfirmDeleteClose}>Cancel</Button>\r\n                            <Button variant=\"danger\" type=\"submit\">Yes, Delete</Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal> */}\r\n\r\n                {/* Offerings Cards - Item Title, Image, Dates for Loan (Click for detail box & request button) */}\r\n                <MDBContainer>\r\n                    <Row className=\"mdbpopoeverRow\">\r\n                        {this.props.cards}\r\n                    </Row>\r\n                </MDBContainer>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Listing;"],"sourceRoot":""}